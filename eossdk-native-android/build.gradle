plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    namespace 'host.anzo.eossdk'
    compileSdk 33

    defaultConfig {
        minSdk 31
        consumerProguardFiles "consumer-rules.pro"

        splits {
            abi {
                enable true
                reset()
                include 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
                universalApk false
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ["jni"]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        jniLibs {
            useLegacyPackaging false
        }
    }

    publishing {
        singleVariant('release') {
        }
    }
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                groupId = "host.anzo"
                artifactId = "eossdk-native-android"

                pom {
                    packaging = "aar"
                    name = "eossdk-native-android"
                    description = "Java wrapper Android library for Epic Online Services SDK"
                    url = "https://github.com/AN3Orik/eossdk"

                    developers {
                        developer {
                            id = 'ANZO'
                            name = 'Anton Lasevich'
                            email = 'mostproduct@gmail.com'
                        }
                    }

                    licenses {
                        license {
                            name = 'Apache-2.0 license'
                            url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                def releasesRepoUrl = "https://nexus.anzo.host/repository/maven-releases/"
                def snapshotsRepoUrl = "https://nexus.anzo.host/repository/maven-snapshots/"

                name 'nexus'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username "$nexusUsername"
                    password "$nexusPassword"
                }
            }
        }
    }
}