buildscript {
	dependencies {
		classpath 'com.android.tools.build:gradle:8.1.1'
	}
}

plugins {
	id 'java'
	id 'idea'
	id 'eclipse'
}

System.setProperty("file.encoding", "UTF-8")

ext {
	isPrivateBuild = false
}

subprojects {
	repositories {
		mavenCentral()
	}
	version = "1.16.1.0"
}

allprojects {
	repositories {
		google()
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		gradlePluginPortal()
	}

	apply plugin: 'idea'
	apply plugin: 'eclipse'

	ext.getMavenPublishUrl = {
		def releasesRepoUrl = ""
		def snapshotsRepoUrl = ""
		if (rootProject.isPrivateBuild) {
			releasesRepoUrl = "https://nexus.anzo.host/repository/maven-releases/"
			snapshotsRepoUrl = "https://nexus.anzo.host/repository/maven-snapshots/"
		}
		else {
			releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
			snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots"
		}
		return version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
	}

	ext.getMavenPublishUser = {
		return rootProject.isPrivateBuild ? "$nexusUsername" : "$mavenCentralUsername"
	}

	ext.getMavenPublishPassword = {
		return rootProject.isPrivateBuild ? "$nexusPassword" : "$mavenCentralPassword"
	}
}

idea {
	module {
		excludeDirs += file('gradle')
		excludeDirs += file('tools')
	}
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}